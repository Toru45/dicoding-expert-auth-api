version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: dicoding-expert-auth-api:latest
    container_name: auth-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=auth_api
      # Add any other environment variables your application needs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - auth-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  postgres:
    image: postgres:14-alpine
    container_name: auth-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_api
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  auth-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
